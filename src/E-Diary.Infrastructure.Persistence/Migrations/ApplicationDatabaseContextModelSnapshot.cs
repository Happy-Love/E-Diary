// <auto-generated />
using System;
using E_Diary.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace E_Diary.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    partial class ApplicationDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("E_Diary.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("GroupId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("pk_t_group");

                    b.ToTable("TGroup", (string)null);
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("SchoolerMarkId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("SchoolerId")
                        .HasColumnType("integer")
                        .HasColumnName("schooler_id");

                    b.Property<int?>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("Score");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.HasKey("Id")
                        .HasName("pk_t_schooler_mark");

                    b.HasIndex("SchoolerId")
                        .HasDatabaseName("ix_t_schooler_mark_schooler_id");

                    b.HasIndex("SubjectId")
                        .HasDatabaseName("ix_t_schooler_mark_subject_id");

                    b.ToTable("TSchoolerMark", (string)null);
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Schooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("SchoolerId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("FirstName");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("LastName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("MiddleName");

                    b.HasKey("Id")
                        .HasName("pk_t_schooler");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_t_schooler_group_id");

                    b.ToTable("TSchooler", (string)null);
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("SubjectId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("pk_t_subject");

                    b.ToTable("TSubject", (string)null);
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Mark", b =>
                {
                    b.HasOne("E_Diary.Domain.Entities.Schooler", "Schooler")
                        .WithMany("SchoolerMarks")
                        .HasForeignKey("SchoolerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_t_schooler_mark_t_schooler_schooler_id");

                    b.HasOne("E_Diary.Domain.Entities.Subject", "Subject")
                        .WithMany("SchoolerMarks")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_t_schooler_mark_t_subject_subject_id");

                    b.Navigation("Schooler");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Schooler", b =>
                {
                    b.HasOne("E_Diary.Domain.Entities.Group", "Group")
                        .WithMany("Schoolers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_t_schooler_t_group_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Group", b =>
                {
                    b.Navigation("Schoolers");
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Schooler", b =>
                {
                    b.Navigation("SchoolerMarks");
                });

            modelBuilder.Entity("E_Diary.Domain.Entities.Subject", b =>
                {
                    b.Navigation("SchoolerMarks");
                });
#pragma warning restore 612, 618
        }
    }
}
